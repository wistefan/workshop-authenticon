vcverifier:
  enabled: false
credentials-config-service:
  enabled: false
trusted-issuers-list:
  enabled: false
mysql:
  enabled: false
odrl-pap:
  enabled: false
apisix:
  enabled: false
scorpio:
  enabled: false
postgis:
  enabled: false
tm-forum-api:
  enabled: false
contract-management:
  enabled: false
postgresql:
  primary:
    persistence:
      enabled: false
  readReplicas:
    persistence:
      enabled: false
keycloak:
  ingress:
    enabled: true
    hostname: keycloak-consumer.127.0.0.1.nip.io
  command:
    - /bin/bash
  args:
    - -ec
    - |
      #!/bin/sh
      export $(cat /did-material/did.env)
      export KC_HOSTNAME=keycloak-consumer.127.0.0.1.nip.io
      /opt/bitnami/scripts/keycloak/entrypoint.sh
      /opt/bitnami/scripts/keycloak/run.sh
  initContainers:
    - name: install-jades-issuer
      image: quay.io/fiware/keycloak-jades-vc-issuer:1.2.0
      imagePullPolicy: Always
      volumeMounts:
        - name: providers
          mountPath: /target
    - name: register-at-til
      image: quay.io/curl/curl:8.1.2
      command:
        - /bin/sh
      env:
        - name: DID
          value: "did:elsi:VATBE-1234567"
      args:
        - -ec
        - |
          #!/bin/sh
          /bin/init.sh
      volumeMounts:
        - name: consumer-til-registration
          mountPath: /bin/init.sh
          subPath: init.sh
  extraVolumeMounts:
    - name: elsi-trust-store
      mountPath: /trust-store
    - name: realms
      mountPath: /opt/bitnami/keycloak/data/import
    - name: providers
      mountPath: /opt/bitnami/keycloak/providers/
  extraVolumes:
    - name: did-material
      emptyDir: {}
    - name: realms
      configMap:
        name: test-realm-realm
    - name: consumer-til-registration
      configMap:
        name: consumer-til-registration
        defaultMode: 0755
    - name: elsi-trust-store
      secret:
        secretName: elsi-secret
        defaultMode: 0755
    - name: providers
      emptyDir: {}
  realm:
    frontendUrl: http://keycloak-consumer.127.0.0.1.nip.io:8080
    import: true
    name: test-realm
    clientRoles: |
      "did:web:mp-operation.org": [
        {
          "name": "READER",
          "description": "Is allowed to see offers etc.",
          "clientRole": true
        },
        {
          "name": "OPERATOR",
          "description": "Is allowed to operate clusters.",
          "clientRole": true
        }
      ]
    users: |
      {
        "username": "test-user",
        "enabled": true,
        "email": "test@user.org",
        "firstName": "Test",
        "lastName": "User",
        "credentials": [
          {
            "type": "password",
            "value": "test"
          }
        ],
        "clientRoles": {
          "did:web:mp-operation.org": [
            "OPERATOR"
          ],
          "account": [
            "view-profile",
            "manage-account"
          ]
        },
        "groups": [
        ]
      }
    clients: |
      {
        "clientId": "did:web:mp-operation.org",
        "enabled": true,
        "description": "Client to connect test.org",
        "surrogateAuthRequired": false,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "defaultRoles": [],
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "oid4vc",
        "attributes": {
          "client.secret.creation.time": "1675260539",
          "vc.user-credential.format": "jwt_vc",
          "vc.user-credential.scope": "UserCredential",
          "vc.verifiable-credential.format": "jwt_vc",
          "vc.verifiable-credential.scope": "VerifiableCredential",
          "vc.operator-credential.format": "jwt_vc",
          "vc.operator-credential.scope": "OperatorCredential"
        },
        "protocolMappers": [
          {
            "name": "target-role-mapper",
            "protocol": "oid4vc",
            "protocolMapper": "oid4vc-target-role-mapper",
            "config": {
              "subjectProperty": "roles",
              "clientId": "did:web:mp-operation.org",
              "supportedCredentialTypes": "OperatorCredential"
            }
          },
          {
            "name": "context-mapper",
            "protocol": "oid4vc",
            "protocolMapper": "oid4vc-context-mapper",
            "config": {
              "context": "https://www.w3.org/2018/credentials/v1",
              "supportedCredentialTypes": "VerifiableCredential,UserCredential,OperatorCredential"
            }
          },
          {
            "name": "email-mapper",
            "protocol": "oid4vc",
            "protocolMapper": "oid4vc-user-attribute-mapper",
            "config": {
              "subjectProperty": "email",
              "userAttribute": "email",
              "supportedCredentialTypes": "UserCredential,OperatorCredential"
            }
          },
          {
            "name": "firstName-mapper",
            "protocol": "oid4vc",
            "protocolMapper": "oid4vc-user-attribute-mapper",
            "config": {
              "subjectProperty": "firstName",
              "userAttribute": "firstName",
              "supportedCredentialTypes": "UserCredential,OperatorCredential"
            }
          },
          {
            "name": "lastName-mapper",
            "protocol": "oid4vc",
            "protocolMapper": "oid4vc-user-attribute-mapper",
            "config": {
              "subjectProperty": "lastName",
              "userAttribute": "lastName",
              "supportedCredentialTypes": "UserCredential,OperatorCredential"
            }
          }
        ],
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": -1,
        "defaultClientScopes": [],
        "optionalClientScopes": []
      }
did:
  enabled: false
# register the consumer at the til. Only possible if it runs in the same environment and recommendable for demo deployments
registration:
  enabled: true
  configMap: consumer-til-registration
  til: http://trusted-issuers-list.provider.svc.cluster.local:8080
  did: ${DID}
  credentialsType: UserCredential
dss:
  enabled: false
  crl:
    enabled: false
elsi:
  enabled: true
  storePath: /trust-store/keystore.p12
  storePassword: password
  keyAlias: test-keystore
  keyPassword: password
  keyAlgorithm: RS256
  did: 'did:elsi:VATBE-1234567'
  keystore:
    keystore.p12: MIIfCgIBAzCCHsAGCSqGSIb3DQEHAaCCHrEEgh6tMIIeqTCCFGoGCSqGSIb3DQEHBqCCFFswghRXAgEAMIIUUAYJKoZIhvcNAQcBMF8GCSqGSIb3DQEFDTBSMDEGCSqGSIb3DQEFDDAkBBAznmS12CDE0yf0G1SSrr8YAgIIADAMBggqhkiG9w0CCQUAMB0GCWCGSAFlAwQBKgQQDVKFliPntXi3bW7+iv6QwoCCE+DUsbCDz+ZoJZhZG4mpytMOqXPYw+3CmpcdqFZVQEqnWGpkoxi7OZ1cd09C6qbHQR9LgXqJL0/SaIRHc6WgvuUBCgHdDlllc0C4MloinQJ7WRqnyW7pdSU3SceZoOZcO+K3ea8YkbMacLCeYlPsjpG/fMZsDP9ncCbZEWdV6u1+gllxbm/rLBF8W1BJG36KV03le2WEL2usPmvu6t7Kb+Aa7uH+nZCN67X1xyza0odRQAqbgr4ZWxZim2zLE37ELNfvwwtl1zXHmhO9SAO3lJdq9DuP1wri55mik4F2puEE5X8mE7XrOdIqkks1IgwZa1NMMb8zCSCm43458WWT/seOnHeGl7SYVNow3KSwB6TF3a3GymHUSKm1qS0BcDn7gswpaN+/ZYGYZrutfUbH1+/o2/iiqvFDO2aZRJpVK6zoLDwTrCg5c5U/nS8pWrxLtmogeFE/v/MD54SrVqm6UQDSJLOCbljuWT3KWfi0JUgKMeLNgjipF/MpzMJT5my5Asaa1JulovTCDVb85cqVW9MRzQ5eCtj7jEzSvKbpnVBPFj18wuEWr9PVxUP/QXaKUu9GdK/BdNN38ZBOO8bOxKUc+VqTgfjsuJXi9LvXAJIB2D5zOCXGjZyx29Hhmx3Ko6/LCyHJ3hZWt/Mi9udAVtH8WepAI4TssRTt9jFd8jiH159MRyuqgGjljv8AN0LZeKaQ6dBjmc0YzhjwqTPAeW4bANSFbaigFI1t73hKXwDS3btoSuE29TuX24p22YqG215JslO7MpP72icuHS5vwQDeD9gNI066MQCLVejC48G4YJ2dfmwRq9phBL/4lQz3mK3K6MhZbRq5wJNgT9lMi+PfHotKtnsfU7TNUYIAhSgPhz882RyAfm7nfj7LWFl6qtKW51j7w+iIuCtIJU1p+INT2aE2syltjADYJCv1cG/+IJa2AOEgQibdNHK0WdX4qEf7Fh0aDuYVIFksAEVEOxN24vuV448tRNWJwa7Vc8kjwFoSXafrY55EGJRI93UvetfXfT60RwYDrz5shzyja6qnXrGjrMSPiq3LC88pks0UJfxL1nH5llBxiJhVzIlcMiQbPbTF0Esg3OH8tIQQTX3CFkv4PpCq8GuVdrPhrM0Bn2C3Wm8FQCnoscjZ8x0o8kPFqX5y8grCLfgr5wa/pazwNmXAqonhaCsV1TJEGogczEUDo9v3nzxYnrIN3DH++1xPf16TE2JGeD2sq6DSEZwrlVs9AL28BTVkTjtzreoAjbH0kay7HoZdPeFU5AnHLfNM3TNuNhiaiZphMJKOJ6u6uO3l6m4LqKRwHYLxEXG+DGe7CidF/4U1wR/vsrCc+AXHIeagISfTtwXQ9qbFeADvLmpCxkF1l0snVw3R7lZBjiimAhZwREMJxmiDfkJx2nsmZqP1cim6B3Bslt6XDbCjbmJfWcgtc0R1yxrKhvu4PYrsUdJDM9ebzLn51m6yrHicpaEcMVd4B7Pg632DErSF5X7xo4UdvKnMOzLlc79ZlkO9U8lsHzH8piq/ecaEU88Y6GWT6OWQ2TX/6ymTR6yMJi+NLmH+uTfmuMu/rt+RgX3V/0E1voDC7euThnE30EE4gSrSj3Prz4bWZMMhrghheD3xr5HVk4ZB8MDvlG6JF5ikcms2JvS3t9vNWZkGnBSZAj8bQ0z5Zi7l2ms/H0fS74L/jfitfIGa8N/7NdRJgq5A1SHIclDF4r61L8WbB+jbNJ2RDkztdYsWUOldhOV6r/HKn4DmIj8xU2AMoGyymNzt/o1s2b7nRtdErLXVvBRcmy1bA7xmeMpPu7aMVuS/7C3h08dhVLMh8BA5ERJtcxIWKdz5jz8iNsZaaia0aoZ1kg1LfW/fPTmLRLR2VwpSgK8z7CGvvFFk6jsvQcKvobNquPbNFQlI2vujoCrpvE7VmmAXCx5KgbuctAsujb4ZWzUOKKUdVf7/r4UqHtLMg5PIdZCvsxHOBnXP3M+zVAObH6t9ryNx7bsAfHD0zlMKTMa7kiPlq6h4rVAqXT/SUn11jiRZkT0ppZKkGX7PID1PiWx369r05+g7Fva5wFw7mVqhtGDJb4i9ivaVVMc9oZm+jZmiGRgX50E8gCtMtN3IiBtC6+aXOcqiuPzd2Kt7lslOnhKxgPGDOCLY/KWZzKzfBkmEfihXhU9xEbXmgs+q9eooKKD01ARUZj2xPCPvyojfNWCEtuZAczEZMvr6ZKkkWuQ10qW1eZoh7tUIhAOGM4T6+1bOoUROt3JnEFSMpVTLJNRETRebU5kCKsmMCRroFvY/wYSh1TFUBr242Iv2IfoyD4WO2SU1JrNKbf/ZWaRuG75DTbHL53o3TiZszHhe5Ye6G4ML3sBoqpMih2AK194TkB5rJ8R5rKsF3ttEj5ID/AzNQboYFLG/OrsPtj9FTHBDR1HSddbQSFmmzAXbfyOKl4oYOVY/5cViSrFiA+K1OEbj9al6jSYGgb7nFu9k8I49q1GGzDxc1/Z4dN35Yr4LTIp1L/oU1Y4L4Ui+bJVmv0L4NzmMqbcXOy+vMmYEZ5kkEf1S0jS86t+3DnOpJ1zFOqJos0scP+cw7Ep5ksWXBbDiHHjgDOcCjqFj2MNCJbR/DohMfN2VtVP67YI5blylT4LrEE8dRwRQyDUX4drWtxfa0L3C9QWKVtQaNJJcHxnJV17B9tuNNRB+xQowYDbFX06ltbdDzmg7ij0z2kmsTQ986DDhdc8JzB19jtJfJJ3js9UlopcD6DkZs3pRZKK+oC2NKaExqHmLWn/JeD2xT9tit/0Yi02BUxmg04nq14t9r6ZBNnYDfabQ2il1UM1iVCE5eD0jjf80LlRW6bO7gMR6HkTN0KwTYn5BEo/9cVaUH8tRidt9OLdcFBIfJDXq88JalCPagtHkWOgBzVbMSkmKTyFl3EjWo/KvZlr238cquSXvENGdAkpRCAQBoCjVRKyP01Gl+adGY7mGlcQzSVquCs81HPBnifHObfq5WnElxvgfwvES6/fOtvEyEzP+Gewz51LwFO29Azmd194ff+ZEqY7NQmcHsr0FoRW80i4Tw1XqSR4bJpf/WYwSg25gjZ1WqTg95EOYtEzurtVAPsHK0ZXl/Kthue9pAyGRqXDuo+zNmD8BZ2s44mjsWyCH7MNr36AOdyXB3U4LhmPbuoBvdgPTkG0Ot+XYmkrKRHlGZBNyPkbMfihqhr6khqe60giPp1uJRxgECdXbRctOVjlWyk9ZY6xUkNLSO9uzXkgOJ0vDjeGTXiNJgUWDUUPp0Nl6KevdmmqqyBaSVTIEJQfwZsw9zn5DFgNmoXykgQ/T+H+SqIXK5/tlaj3Mm1UndLzv+F9rEkXFxz6oNGdjBsSyZwuK8YFp/nZs9suZe6yLMj/FigK/b2Ov3RCTkqhl+XoDrhiTse6LZkAy7qSwE2gZvMXT1WmuMQxIvlyqZ6GIm0QES3VAqw4LunlAlPuWxGb7A+cX0wBuiucGSyxKvzQHCXHVvkBZUlHeeTgNCyIDhDqpnVAXb7gvwlvZg9lSzxlnaer5KQ2hS11i5bRUEj/4T5Xm9J0BWs7w6QErRIzbPZ+c9SvusgXyYWtvRPWLkesbyBKx3OwaPEg+/nbd/rTL0UBrYoj+UqCDxBW/OMnkijgv/ZHBgBVuSIyHQNPSg0oHae5wxCNuuJ4+ZTkoEi2n+P1ucf2WE4p0ehZc9qAQt92+CWJSAI21n9otR5vaX+cP/lWat+Zj8qLew7Nj6GEfAoNHrn41hYXQ1h7rHXXlC7Og927iYReqfX8dQ/gNdA3NursbyHyq999U3VrxCfzpcVN7J75HhgvoY/6KdvJa3/FvFpX0KR9/s0Bd0sY6BpSTkjTa7JSaIxqdEp/gXxfuuoKoVBFRNPGMYfaVQFxyMzNseR70+nmLePzhEMaJyamnVADL1Lgn0os4SQtqSFt2of6WQHpKeC5k8sqV3pP3AeRIaaU82bgirCIPdPaGGf+Cysg/1LMqmj/Tl8ZN4cRIgTefXqjHxJTw9WjAmka6qC4TUrp1QR/wrnZS5G5np26VTwyF0VbeF7lpN5JDIhFNgG/+7WTOhwYfEoyFc+Xy0jwhI2RssTR1e3xuGX1zGmo3DqrE7pkAyClcrI6Z6Mv52lkgkGUsQrci6UF4JIqoFr8QztiCe6unXBD170+PD6BRTqDmW3oflIHEfMy/HiudtER9scCXsLtYj83+becqsnSDxp5X73kQNcvINKQ8KnpeQuKF6YOVbyQlMVWLSRcIWi0EBjVTIzAmRpREnyP+SHAsBHNcqdADoaaGkNSVCGh6R8LPYvlEQcngRU+T1Rp/YAlINCU6AGXtIu98AcTIMptjIzMUDGDe/UXIp5zLbnb15DYEUJAdCZJ/rpdpOS54glxJdYgkpwUE0R9SsnQUDUqmHPRmdTlc62OE2mdZwPq4xrnJtplUqUqju5RVVIANw0xG3I6VBzs1/cnKpCKpynQ2+Hj7C+1t8DZEdoCAfRnC+Z4gDZFaPcuoFlaJAWuDmDB+XpXkReIL3wDlmlgjgje/zMk6c2mRHTtU6Iv6CNClfn6keRDN9N/x4v9WHxzRd6OcTuESRZFsSQ+7acmCJj3XF6oLdWHhAcG72q8+xVCKNvcU82IY6KJZd2V14KfMemqmjFM1YY+NxzBRHxQ4t2VWaUliEucqP0zw2SGiWQA5rg0ubQ4QGGL4B5h2GiqNNoT5Bzo7o95MI92uFaFbOwBRXsczHgi+PNo/kbi9dSkm+SqY2OBpP5jIV8XBuuRtbrIhxtrmLe/zP1J5YXpB8v0u887N0sJ/aR6xXEB1zAEK76jR+J61VBsAthzuPrcSeYoAO2CIRgnEWUyK6WsW5jOOKmSCF2+VSprRbNd1wijuyKzCbQV2JmDTX5wjyTeYPXNN85lABkiZlaqbDBHE9gJWtiyqJXLuPPUumXU5Ed6F6Ud4bbBpskHeIdxy+Z3wSC4hLIJ+0fLilYyxtkHPbJwtM2Y6oc0j/tgp1VdzQ/rfPoNuqF6e03w/2UNdAEm+1956BS3FceyvLHl1C1BcM4nliliVZunt+gLib6j5/411Yi4QJMiUSE/kKq7ZkgYo5mQLcfTHq3AmT0OqAu4ySHJUn8Upv4WTTnB1crYy7ge5Is576DUqN+ToLf8cI6K6LNz8+awr5VKGz+6DENtZQxroDvAialByi4nanuT7LMqAMjjplPTvWWQSlgTDqsjsfpIMoKXH6d2Wm49yRaWyK8fRG9xkmgzHHiibEoqPAtfhkm48ASvrf8nudSLITpHA58rB6NMHu25g1c/Q2GBzjzKQGOlaLHezO1+nSX3srUhbdVF27ccibcztb+LFuJozbN9hIvqnzy94HWS82un8jUaLfeX2+MXkqNSY13evFdv06oHJZBSONGImpDxGS89q6ORl4xj6UWZG8g4qFLSmqgR/nz26pWvIt21DSoAFKsB+40uP9T4Yt0KXYFiuo9cen/aPUKBvlKupcreeMSI3DIcwxRiNPX4LIlZRzPDCDMz4RZOuEZIcJpUKSL5iaf9sI91UR33Y7lUZxfo9YFn/PooJMlm1KpBRsSEJ6vkGt299rM1cGKnxurqXUc9Qpu8GoD2VKbgSUFW6SxVm2W8oNj2rKjnD3T91wTMVatNSSGthnpuUcP7hYuEp5g4nGgSKBnwHJUqA0uJXMIJOFT6XzulFRsTOydbA2QDxtUgJZOBNI8MKldvfO65dJml3onexmOWi6qsx1qiYjH6vlGEm9pGXY9zcdOAOMPR4poSXRJDBUqPlUFwVwODSXTnHuCvFEiynvPubP8aupx4EpuQXhY49p+ErPvsMebj7fWPhj8XcdsXOFeKdoVJr4gzvAR1YqkINfSRufCK1EWuujCVJkVRy4CT7y4N2LZZn29piH/kuN1GzRGknkVwZ75Y6Fp1n1DK/rqr/X+SdPi6BcN6ZkCoy5uE36nhJySyLk00tEsQOF3pVkHsgXKdeW2dhXe32qihzToxxBoX62/gPSvXWNlKP+rOCXjZxrQLcRbQRAXtXt0sDZUjMktHAhDshOTyZoAoSd1srpiknPeYr3lgjz2m6FGq9Pc4CugOafvsB1m9rKIdw/JhlT/Ug3DuBYc9oARxLVGosKZheX2JwdheWiBZtubcac+wWtvPq45Zc/G9wkZCESAF1+7QBJBSWA3zw1CGmeXHQYrupJrYY/d0dF+6OtbJL4NkEJ/tJHP3wKNi8b3qtdDL2UtDth7Bi2GvIAdknUwUbJ3B3ZXkgzTQo8GudwdRmdTeIjebSycfmWTozwMRIn2qIYlbY1YkBQicaHqTLQC75OiJCkSjTd9rDilFe18On82+YbEOURWbdxP76fJUUYnSjH4SybS2jF0y4Lu4iMr3uyLW4j7BuIw/KSDyHHmf5aiTqwJHmN55F6gcSqoqxDhAHv3OBVobzYhYJqrTsUHxDsph/NWQIGYOY9N5QSDvKZQz/+WBgfgVu8Xc+hrgqykTDIKanxKvLR1gZ65U70sT5bG4h2VOUP++vyEDXcgsj5ERPrBt3Z1XYG+QzpIxGeN6yeFuUi0Dw91ng+PYyDFPqt24zbxs2KZChuesCXwQxFd11bmx5nlNii2mXmX+oh6DxI+/dhrXU1AKLN9EJVdetOF42qMPz6TpNpAckOaZLm2TvFpzB4dMS4GV7SUqJ4HKMrleRXcr53GpLuYcGti2K9qAF7DvoEqELfzpq5KaG3F6bVa7AFpkRBtnmy6qeHQ3ZNCiuelNNbi54nz54C9ePnfvCT4ngi7eMvhKlo6o/dI4PF9kwggo3BgkqhkiG9w0BBwGgggooBIIKJDCCCiAwggocBgsqhkiG9w0BDAoBAqCCCbkwggm1MF8GCSqGSIb3DQEFDTBSMDEGCSqGSIb3DQEFDDAkBBBo7VMcotuo2RXuGdcUw4dWAgIIADAMBggqhkiG9w0CCQUAMB0GCWCGSAFlAwQBKgQQZbmwFHT4ZgWqpY42eswLMgSCCVAYOp8R+iJJuNpmhUeXd7qdkscFzKLAeJgR2PnYFd0HYNQn6TQC5C6Gy1fTvOfWbdK732+ZD5R2R7N7dhFieHCSP0/AbbneEYXrDYduA2X+Zpd/S+h5TKFQKxWr2tnMklX4QJc90JN9ZI4Rnf8rgPwZuYdxv79mnsLGV1E0piEB0JTjqzIpSc/0wTbxWz8vZ6/9ZI+a/k0vI5adoyajbMW1OgbykrSLvbWCADotOhhT0DevNA0LJIOlNa9Hth2FY4A8q4gAsZPXVsQmtC/8TbbkBJqbOJ6XrRavVNTC8hK15TU2wCH4RA55FzQXKZELx6ydoyZ8Hm5x2wzesORU5aC+6gEOi1XCGjPgB/pWdRSIcnrTHLkgFgCInMQRGpODHPLymRrdwJ+fz3SJRW2W6/cyABkxkVXLJBF4lPwgpvZB73Rgi94CBcXEUsI9lwQ+QuDeKKPZWmWfn7tPgY5x1kP2mdqLPoE127mzfX8Ld9HhqToB0DKCS4fbniueTceXoOLPJUJ5udcz0eAesUce9d4nfhEsFiw2eFc2RgBdNzoXMsjXHZQp94/okapL6fTZUUFF61cnA4lUu/Z3hugdh/7mYuBApqa71Ajjtfj3GoLiPVg79p3aU3JFab7xLTULxsLwc96vHpWk5/HZ0hNviVHLh2FMdpg0bpk71B7lFiu8Ozh/M+8xGOErCeQYIRFKefwzAOuWd1WFtTghPZOZZPNrDZkD6U9doxpLUWPF7QB8ZRDlRNWBngszN9XwrPU9KrfYCNetj+zrR4bIkFmtOsJYE3UOO8vQ8pR+nMYhOhSv4+jr3qTACXppHYVY0RaNxYfjUyxauvphlkvfYbXw6wgC6nsS/oCU2WSpf9wb1fXGrC9BGhealyC3eU8HHIJY49UcwQ2gGDMhE15srLF+aCMpATxhlfgvLtw92GFL+uWwtcBLT76M97iV0dmajFEG0wznrcnIgjGLRjwTa6jqogJb6gyxVVT9J6/y/Qaq3rQIbTDJD4k4iClvSlF2VpokurSdj/yzKvNb9gdDfXOaJx4SqPqH/MbqcpWUEBOWWlblfXT1W2/re2ojZEnsd6Nr4Z7jKlYcji0awdL8KHCpjFGvmp8TRqkKWMIcbTfFj3CD3j7knHglLRHod5lHu1amTDG4+LzkO2imQZHmNF+HNrMZdt9jzVUI9v/12X6lFa0ikFafh0wkqoVXsztmbV8hwnSlIh5kJQD2kSz/XYUVGHeAZcnSY0e2eRobRKvg3KuV6dAdjjzHesIIVt4ZdAJdxDhc8Y+5C+oD92AUf8hJc5DyQOUCwEwH3M1y5faIRVUOv08G2uSB+lRE0+7EgPw4a0HTOEkmRKRLwQNUc4CLyaBsWVn8yPbu2O2eIUoEc/AI2Hx3B25lxT7rEXDN6mb12KCPn6Ffjl0kRDiP3AAnH94ChCgOykWxj4R8xzcUIsE+pOeLq32CwU9KHDAtYrSOSpI0s1YAAy8hKBWf2Rz/zNNioT2WfXsrZNi42FAUJ3AWLoiwCZCDeqhxNA8IHLhz/NXAfNIXB9Qw2sboqpEESj5vYObF9ffZHeBlNpxgBlWDXeXjKsK3SJx98VEuzDy/tQj9u8uJhV2S/GIKAJBNepd09XPrr00wqTLnTsWAhvVXsnQY/S2iI5ZV5d9CBNYynsP88AvcWXHLAjWv+GTwnP+2OuNNf49MLyg3gFOu6Gvra/jLvCR4N2MNSim5ZDXcaAnJHpDQV9DqzmrzzGMaJOSUFdCuD0E28b5A82CgbLZcXM0XYCq/5CZj+WTscUetOW7IGV2EtFOKafuf9nG8cMlgAz3lMfwuO49OlXmmAJ1gcWRVn7xbhgowofSUbVILjsa5vJ28jSof/z02JnAB8bPLmdYQEfNHgjLDqowyeqY8s8Has4Z9KGg5SRr1FSetGh6uKuD2QaAjHLOxQIjh3jtuiOrwBJ211+tays9LN9ZQb1ZECdLiAJmMv79UBEKN67PXgqcqO6ECAzTASIhZyScSQqoKugiRsNdFJzyWzIYMVOXo9CA8ggjZHmu3NvwZMTs1hzBuCumPF8oI2Y3FWmBKS2oKG/yFj4m32zdTbLXKCunf88Pp3QdEujaPX2nCWO5l5hsAZjrbEjeVA50uId+Ebi5rZQaIbhm1xcdkUVck47CxcnnhJYi+u30yyxQLX4r0fVupDoTqIyNP8WKDMrUbHMMAXXSUGmW0PPd/h58DIvxDqciO1pGeqk+x5rC015PSKaPyofxPB3NxK9dFYCLuAMJdE30mt7SPTMRT3ZPTs1kPhOsHTDOBsYFO0p0LLz2slCh3L43nHb2RltT8j2Df8w9skbRZmXLuYkiEP1hW5qXXx7ZxvXfD/2hiOdeO1zInFu1CD4v+TpPSzAuZkVK7sQhTOiEQBBJWcAoRFJwIKGaPvirDNHf6dUh/s+dJ0URNWAXFmIYMQpuHn8e/m2X7pf+htVrWjt54NrKK+sMHRtx1N16ntGXcSTe9YaG5hq8EMgkdJPM2hKS8bCjix0UX1SVa9pu4X40MtCtAEtpyJwHCI6AawDozYJ4xL1fkFuMRc32PENzHpbeTPli96Hr0Zm9TPDkZF29S1CXwvbypqcayWMl8/vJDsyJhy9+ENH0uEIK1v2kcFgUB9KFdqIL8OHV7qaxPOPicrfVRmmdqMGyW7PFkD9MLfo20XnI2TLHcgsHTDMgKBMEyoQFc96W7SoB5Jcwpg7c3wfaodZeahILSdpEDP3UE9rk5cV1UTnE08rW808GUgiCNJ9MuavZMHyt43RdctKdY9tpP++ALB8dRNUa8c1UZt8EBiTQcZiarSK4LvJ2ZERQNCa7kFwdBjneqJVldoPyiW98LPy7QCErwKc3VKerR9Y7bM8hH6EQzgU7WrUYzzyXXsuQA4dcBXimylk6FsgW+WWo9mNnB3dCBMop8vrANWXooODn7yHbQHhCvftjlb/l0cZxY3jculjdJNlkKjmI/jgz+izGU8xBhF9X0HuwOTCc3ucKtkVA5QC6hfz00YdZS9+O2lUI8vN0lPM6viFjDHININaFUHcsZCdJPUW8uIlSQ4joTnWB2Dn1wVkUB0pTT9yJfcyK6qk/w3Uxg4G1cTQdrvCIipRtRGwouhtaTKaqCeV2Ct+MV0rqSLotDvLRrnGAw6VMufNIuVPfpZ5tJZwZGOgFaATFQMCMGCSqGSIb3DQEJFTEWBBSOpOx/7NYwgrNmLNF8HDyRHeo9MDApBgkqhkiG9w0BCRQxHB4aAHQAZQBzAHQALQBrAGUAeQBzAHQAbwByAGUwQTAxMA0GCWCGSAFlAwQCAQUABCBzG51T1EjNc/iGQzNadoMQsXA6t1kRzQGmaiygUnsrYgQIt/CZ9N2m824CAggA
