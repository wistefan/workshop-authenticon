keycloak:
  enabled: false
apisix:
  image:
    debug: true
  dataPlane:
    ingress:
      enabled: true
      hostname: mp-data-service.127.0.0.1.nip.io
      extraHosts:
        - name: mp-tmf-api.127.0.0.1.nip.io
          path: /
  catchAllRoute:
    enabled: false
  routes: |-
    - uri: /.well-known/openid-configuration
      host: mp-data-service.127.0.0.1.nip.io
      upstream:
        nodes:
          verifier:3000: 1
        type: roundrobin
      plugins:
        proxy-rewrite:
          uri: /services/data-service/.well-known/openid-configuration
    - uri: /.well-known/data-space-configuration
      upstream:
        nodes:
          dsconfig:3002: 1
        type: roundrobin
      plugins:
        proxy-rewrite:
          uri: /.well-known/data-space-configuration/data-space-configuration.json
        response-rewrite:
          headers:
            set:
              content-type: application/json
    - uri: /*
      host: mp-data-service.127.0.0.1.nip.io
      upstream:
        nodes:
          data-service-scorpio:9090: 1
        type: roundrobin
      plugins:
        openid-connect:
          bearer_only: true
          use_jwks: true
          client_id: data-service
          client_secret: unused
          ssl_verify: false
          discovery: http://verifier:3000/services/data-service/.well-known/openid-configuration
        opa:
          host: "http://localhost:8181"
          policy: policy/main
          with_body: true
    - uri: /.well-known/openid-configuration
      host: mp-tmf-api.127.0.0.1.nip.io
      upstream:
        nodes:
          verifier:3000: 1
        type: roundrobin
      plugins:
        proxy-rewrite:
          uri: /services/tmf-api/.well-known/openid-configuration
    - uri: /*
      host: mp-tmf-api.127.0.0.1.nip.io
      upstream:
        nodes:
          tm-forum-api:8080: 1
        type: roundrobin
      plugins:
        openid-connect:
          bearer_only: true
          use_jwks: true
          client_id: contract-management
          client_secret: unused
          ssl_verify: false
          discovery: http://verifier:3000/services/tmf-api/.well-known/openid-configuration
        opa:
          host: "http://localhost:8181"
          policy: policy/main
          with_body: true
dss:
  enabled: true
  keystores:
    store.jks: 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
  trust:
    stores:
      - path: /keystores/store.jks
        type: jks
        password: password
  deployment:
    additionalContainers:
      - name: crl-provider-static
        imagePullPolicy: Always
        image: "lipanski/docker-static-website:2.1.0"
        volumeMounts:
          - name: crl-provider-json
            mountPath: /home/static/crl.pem
            subPath: crl.pem
    additionalVolumes:
      - name: crl-provider-json
        secret:
          secretName: crl-provider
  health:
    port: 8080
  crl:
    enabled: true
    secret:
      crl.pem: LS0tLS1CRUdJTiBYNTA5IENSTC0tLS0tCk1JSURuRENDQVlRQ0FRRXdEUVlKS29aSWh2Y05BUUVMQlFBd1pERUxNQWtHQTFVRUJoTUNSRVV4RHpBTkJnTlYKQkFnTUJrSmxjbXhwYmpFU01CQUdBMVVFQ2d3SlJrbFhRVkpGSUVOQk1SSXdFQVlEVlFRRERBbEdTVmRCVWtVdApRMEV4SERBYUJna3Foa2lHOXcwQkNRRVdEV05oUUdacGQyRnlaUzV2Y21jWERUSTFNREl4T1RFek5EQTBPVm9YCkRUSTFNRE15TVRFek5EQTBPVm93SnpBbEFoUWVzRUpHV3NTbjJ0dy9MVmJJWno1ajFSdVRmUmNOTWpVd01qRTUKTVRNME1EUTVXcUNCd2pDQnZ6Q0Jyd1lEVlIwakJJR25NSUdrZ0JUUTBpUEFMbFZJRGcyajRZNlZaUVdrcXNHbwpkcUdCaUtTQmhUQ0JnakVMTUFrR0ExVUVCaE1DUkVVeER6QU5CZ05WQkFnTUJrSmxjbXhwYmpFUE1BMEdBMVVFCkJ3d0dRbVZ5YkdsdU1SSXdFQVlEVlFRS0RBbEdTVmRCVWtVZ1EwRXhFakFRQmdOVkJBTU1DVVpKVjBGU1JTMUQKUVRFY01Cb0dDU3FHU0liM0RRRUpBUllOWTJGQVptbDNZWEpsTG05eVp6RUxNQWtHQTFVRUJSTUNNREdDQVFFdwpDd1lEVlIwVUJBUUNBaEFCTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElDQVFCSzczMkFYVi8yU0RnRElBUnpyVE5KCjJqZDNjMlpzYWs3eXZwM3AzRmZMaEV3bUp4OTQyNlZ4MnA2MEVLRnV3ak1LblpXMzFOQzRnQ2hrY1ZwMDd4WmEKaU5CL015aEU5c2lFdkt4U0ZhUytSZWpwVzd0bFBoYWo3OTBzZkt1eGN5NU5JSnFnalROVFpnRGtiVTBVWUF1cgpNUGVoL0dGcDNGOGhiZEZOUThxWFNFNEZzTXBsc1hHaFBmbUNJaWtRM09IK051eTMvOUF1TEYwdlNnUVQxUlI0CmVpNm1GcnluaHgzUVFLRjc3V29LNDVRVnNYNGRNMXlNcXpqTjlpMlRmR1hIRHN3eFB6TmZJKzZZcVN0YlRQYnoKNE02OUtqYUZ6SDFwaTdmaVgyNW9NOXd2M1laR2hrYXNEMjZLNlBtMzRLUVY4eEtTSUx4MndEUnFiL3N0QUlGbApXbURoQkZwQnQ0ajI1NVFETzl2M0pDSVJKcFNWNUMvaVhXK3QxMkFtVCtmWlRTNlQwL0JPNkdBTXYrRVI1eDhFClJQd0VUQVNrT2J4R1kwMDNEZ1ZnQWV4SWNrS05TUFprRlExbFB6ZlhUVkp3Qk1zZ2pCN1NqMUdYZ1M4SGZDdXkKR3U3cmw2ZE5BTmVNMlhMMW9iRHR5MHJvNXhPRmFjQTRkc2c1S0gxazhCVlhlNjQrMHlidUJCRnUxb3hlZ3d3cwpyZ2c1NkdHMjFtbkNpSG9ETktZM1NLdXpHQW92VDNzN3ZsNXRxK0JXVGFyRXRwUmJwcGY3SGJRVlMvakF3QXRTCmp2V3VETlR2ZE1GTnRyVzRTSWJvbVdvbDJqWW5tS0VXM0RBZ3B0MDZwemU4azljRlB3eDhra2NRaG1KbVVvQkQKNHJKYmZuYzN6VFFQekJhdld0b0QzZz09Ci0tLS0tRU5EIFg1MDkgQ1JMLS0tLS0K
vcverifier:
  ingress:
    enabled: true
    hosts:
      - host: provider-verifier.127.0.0.1.nip.io
        paths:
          - "/"
  deployment:
    verifier:
      tirAddress: http://tir.127.0.0.1.nip.io:8080/
      did: did:web:mp-operation.org
    server:
      host: http://provider-verifier.127.0.0.1.nip.io:8080
    configRepo:
      configEndpoint: http://credentials-config-service:8080
    logging:
      level: DEBUG
    elsi:
      enabled: true
      validationEndpoint:
        host: http://dss:8080
        validationPath: /validateSignature
        healthPath: /health/liveness
    alternativeConfig: /alternative-conf/server.yaml
    additionalVolumes:
      - name: did-material
        emptyDir: {}
      - name: alternative-conf
        emptyDir: {}
    additionalVolumeMounts:
      - name: alternative-conf
        mountPath: /alternative-conf
    initContainers:
      - name: get-did
        image: ubuntu
        command:
          - /bin/bash
        args:
          - -ec
          - |
            #!/bin/bash
            apt-get -y update; apt-get -y install wget; apt-get -y install gettext-base
            cd /did-material
            wget http://did-helper:3002/did-material/did.env
            export $(cat /did-material/did.env)
            cp /original-conf/server.yaml /alternative-conf/server.yaml
            envsubst < /alternative-conf/server.yaml
        volumeMounts:
          - name: did-material
            mountPath: /did-material
          - name: config-volume
            mountPath: /original-conf
          - name: alternative-conf
            mountPath: /alternative-conf
      - name: register-at-tir
        image: ubuntu
        command:
          - /bin/bash
        args:
          - -ec
          - |
            #!/bin/bash
            source /did-material/did.env
            apt-get -y update; apt-get -y install curl
            curl -X 'POST' 'http://tir.trust-anchor.svc.cluster.local:8080/issuer' -H 'Content-Type: application/json' -d "{\"did\": \"did:web:mp-operation.org\", \"credentials\": []}"
        volumeMounts:
          - name: did-material
            mountPath: /did-material
mysql:
  primary:
    persistence:
      enabled: false
  secondary:
    persistence:
      enabled: false
postgis:
  primary:
    persistence:
      enabled: false
  readReplicas:
    persistence:
      enabled: false
postgresql:
  primary:
    persistence:
      enabled: false
  readReplicas:
    persistence:
      enabled: false
did:
  enabled: true
  secret: issuance-secret
  serviceType: ClusterIP
  port: 3002
  cert:
    country: DE
    state: SAXONY
    locality: Dresden
    organization: M&P Operations Inc.
    commonName: www.mp-operation.org
  ingress:
    enabled: true
    host: did-provider.127.0.0.1.nip.io
dataSpaceConfig:
  enabled: true
  serviceType: ClusterIP
  port: 3002
  supportedModels:
    - "https://raw.githubusercontent.com/smart-data-models/dataModel.Consumption/master/ConsumptionPoint/schema.json"
    - "https://raw.githubusercontent.com/smart-data-models/dataModel.Consumption/master/ConsumptionCost/schema.json"
  supportedProtocols:
    - http
    - https
  authenticationProtocols:
    - oid4vp
scorpio:
  ingress:
    enabled: true
    # only to make it available for the test initialization
    hosts:
      - host: scorpio-provider.127.0.0.1.nip.io
        paths:
          - "/"
  ccs:
    defaultOidcScope:
      name: default
    oidcScopes:
      default:
        - type: UserCredential
          trustedParticipantsLists:
            - http://tir.trust-anchor.svc.cluster.local:8080
          trustedIssuersLists:
            - http://trusted-issuers-list:8080
      operator:
        - type: OperatorCredential
          trustedParticipantsLists:
            - http://tir.trust-anchor.svc.cluster.local:8080
          trustedIssuersLists:
            - http://trusted-issuers-list:8080
odrl-pap:
  additionalEnvVars:
    - name: GENERAL_ORGANIZATION_DID
      value: did:web:mp-operation.org
  deployment:
    command:
      - /bin/sh
    args:
      - -ec
      - |
        #!/bin/sh
        ./application -Dquarkus.http.host=0.0.0.0
  ingress:
    enabled: true
    hosts:
      - host: pap-provider.127.0.0.1.nip.io
        paths:
          - "/"
tm-forum-api:
  registration:
    ccs:
      defaultOidcScope:
        credentialType: UserCredential
        trustedParticipantsLists: http://tir.trust-anchor.svc.cluster.local:8080
  ingress:
    enabled: true
    hosts:
      - host: tm-forum-api.127.0.0.1.nip.io
        paths:
          - /
contract-management:
  til:
    credentialType: OperatorCredential
  services:
    ## Config for Trusted Issuers List
    trusted-issuers-list:
      ## URL of the Trusted Issuers List Service
      url: http://trusted-issuers-list:8080
trusted-issuers-list:
  # only open for clean up in the tests
  ingress:
    til:
      enabled: true
      hosts:
        - host: til-provider.127.0.0.1.nip.io
          paths:
            - /
rainbow:
  enabled: false
  db:
    url: postgresql
    user: postgres
    existingSecret: database-secret
    passwordKey: postgres-admin-password
